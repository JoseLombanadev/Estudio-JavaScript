Aprendiendo JavaScript a su máximo explendor.

.................................................................................
Horas Echas:

 8/26/2025
   H1
   H1
   H1  
---------------------------------------------------------------------------------
08/27/2025
   H  

.................................................................................

Salida de JavaScript: 

 - Al escribir en un elemento HTML, utilice: innerHTML o innerText.

 - Escribiendo en la salida HTML usando: document. write().

 - Escribiendo en un cuadro de alerta, utilizando: window.alert().

 - Escribiendo en la consola del navegador, usando: console.log().


---------------------------------------------------------------------------------

Declaraciones de JavaScript.

Ejemplo:

 - let x, y, z;
 - x = 5;
 - y = 6;
 - z = x + y;

. Las declaraciones de JavaScript se componen de:
  
  Valores, operadore, expresiones, palabras clave y comentarios.

  Esta declaración le indica al navegador que escriba "Hola Solly." dentro de un 
  elemento HTML con id="demo":

Ejemplo:

 document.getElemntById("demo").innerHTML = "Hello Dolly.";


. Punto y coma ;

  Los puntos y coma separan las declaraciones de JavaScript.

  Agregue un punto y coma  al final de cada declaración ejecutable:

Ejemplo:

    let a, b, c;
    a = 5;
    b = 6;
    c = a + b;

. Cuando se separan con punto y coma, se permiten múltiples declaraciones en una 
  línea:

  a = 5; b = 6; c = a + b;


. Espacio en blanco de JavaScript.

    JavaScript ignora los espacios múltiples. Puedes añadir espacios en blanco a  
    tu script para que sea más legible. 

    Las siguientes líneas son equivalentes:

    let person = "Hege";
    let person="Hege";


. Una buena práctica es colocar espacios alrededor de los operadores ( = + - * / 
  ):



Losgitud de línea y saltos de línea en JavaScript.

 Para una mejor legibilidad, los programadores a menudo prefieren evitar líneas de 
 código de más de 80 caracteres.

 Si una declaración de JavaScript no cabe en una línea, el mejor lugar para 
 dividirla es después de un operador:

Ejemplo:

    document.getElemntById("demo").innerHTML = 
    "Hello Dolly!";


Bloques de código JavaScript 

  Las declaraciones de JavaScript se pueden agrupar en bloques de código, dentro 
  de llaves {...}.

  El propósito de los bloques de código es definir declaraciones que se 
  ejecutarán juntas.

  Un lugar donde encontrará declaraciones agrupadas en bloques es en las 
  funciones de JavaScript:


Ejemplo:

    function myFunction() {
        document.getElementById("demo1").innerHTML = "Hello Dolly!";
        document.getElemntById("demo2").innerHTML = "How are you?";
    }
---------------------------------------------------------------------------------
Palabras clave                      Descripción

var                                 Declara una variable

let                                 Declara una variable de bloque 

cont                                Declara una constante de bloque

if                                  Marca un bloque de sentencias que se 
                                    ejecutarán según una condición

switch                              Marca un bloque de sentencias que se 
                                    ejecutarán en diferentes casos.

for                                 Marca un bloque de sentecias que se 
                                    ejecutarán en un bucle.

function                            Declara una función.

return                              Sale de una función.

try                                 Implementa el manejo de errores en un bloque 
                                    de declaraciones.

---------------------------------------------------------------------------------
NOTA:
      Las palabras clave de JavaScript son palabras reservadas. No pueden usarse 
      como nombres de variables.
---------------------------------------------------------------------------------

Sintaxis de JavaScript

 
    La sintaxis de JavaScript es el conjunto de reglas sobre cómo se construyen 
    los programas JavaScript:


    // Cómo crear variables:

    var x;
    let y;


    // Cómo utilizar variables:

    x = 5;
    y = 6;
    let z = x + y;


Valores de JavaScript


    La sintaxis de JavaScript define dos tipos de valores:

            . Valores fijos
            . valores variables

    Los valores fijos se denominan literales.

    Los valores variables se denominan Variables.


literales de JavaScript


    Las dos reglas de sintaxis más importantes para valores fijos son:

    1. Los números se escriben con o sin decimales:


        10.50

        1001



    2. Las cadenas son texto, escrito entre comillas dobles o simples:


       "John Doe"

       ´John Doe´



Variables de JavaScript


    En un lenguaje de programación, las variables se utilizan para almacenar 
    valores de datos. JavaScript utiliza las palabras clave "var" y para declarar 
    variables. let const se utiliza un signo igual para asignar valores a las 
    variables.
    En este ejemplo, x se define como variable. Luego, a x se le asigna el valor 
    6:


        let x;
        x =6;


Operadores de JavaScript


    JavaScript utiliza operadores aritméticos ( + - * / ) Para calcular valores:

        (5+6) * 10


    JavaScript utiliza un operador de asignación ( = ) para asignar valores a las 
    variables:

    let x,y;
    x =5;
    y =6;



Palabras clave de JavaScript


    Las palabras clave de JavaScript se utilizan para identificar las acciones 
    que se deben realizar.
    La let palabra clave le dice al navegador que cree variables:


        let x, y;
        x = 5 + 6;
        y = x * 10;



    La var palabra clave también le dice al navegador que cree variables:


        var x, y;
        x = 5 + 6;
        y = x * 10;



Comentarios de JavaScript


        No todas las declaraciones de JavaScript se "ejecutan".
        El código después de barras dobles // o entre /* y */ se trata como un 
        comentario.
        Los comentarios se ignoran y no se ejecutarán:


            let x = 5; //Seré ejecutado

            // x = 6; No seré ejecutado





Identificadores/nombres de JavaScript


    Los identificadores son nombres de JavaScript.
    Los identificadores se utilizan para nombrar variables, palabras clave y 
    funciones.
    Las reglas para los nombres legales son las mismas en la mayoría de los 
    lenguajes de programación.
    Un nombre de JavaScript debe comenzar con:


            - Una letra (AZ o az)
            - Un signo de dólar ($)
            - O un guión bajo (_)


    Los caracteres posteriores pueden ser letras, dígitos, guiones bajos o signos 
    de dólar.

---------------------------------------------------------------------------------
NOTA:
      No se permiten números como primer carácter en los nombres.
      De esta manera, JavaScript puede distinguir fácilmente los identificadores 
      de los números.
---------------------------------------------------------------------------------

JavaScript distingue entre mayúsculas y minúsculas 


        Todos los identificadores de JavaScript distinguen entre mayúsculas y 
        minúsculas.
        Las variables lastName y lastname, son dos varialbes diferentes:



            let lastname, lastName;
            lastName ="Doe";
            lastname = "peterson";


        JavaScript no interpreta LET o Let como la palabra clave let.



JavaScript y Camel Case


        Históricamente, los programadores han utilizado diferentes formas de unir 
        varias palabras en un nombre de variable:


        Guiones:

        nombre, apellido, master-card, interurbano.

---------------------------------------------------------------------------------
Los guiones no están permitidos en JavaScript. Están reservados para restas.
---------------------------------------------------------------------------------

        Subrayar:

        nombre, apellido, mastercard, intercity.

        Mayúsculas en Camel (Pascal):

        Nombre, Apellido, MasterCard, InterCity.

        Camello en minúscula:

        Los programadores de JavaScript tienden a utilizar el formato camel case que comienza con una letra minpuscula:

        Nombre, Apellido, MasterCard, InterCity.






















































